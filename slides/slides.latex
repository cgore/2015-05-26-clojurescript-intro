% Copyright (c) 2015, Christopher Mark Gore,
% Soli Deo Gloria,
% All rights reserved.
%
% 2317 South River Road, Saint Charles, Missouri 63303 USA.
% Web: http://cgore.com
% Email: cgore@cgore.com
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
%     * Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
%
%     * Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in the
%       documentation and/or other materials provided with the distribution.
%
%     * Neither the name of Christopher Mark Gore nor the names of other
%       contributors may be used to endorse or promote products derived from
%       this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
% AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
% IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
% ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
% LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
% CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
% SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
% INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
% ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
% POSSIBILITY OF SUCH DAMAGE.

\documentclass{seminar}

\usepackage{fixltx2e} % Bugfixes for LaTeX 2e
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage[normalem]{ulem}
\usepackage{graphicx}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{librebaskerville} % Baskerville font
\usepackage{amsfonts}
\usepackage{listings}
\usepackage[dvips]{pstricks}
\usepackage{relsize}
\usepackage{textcomp}
\usepackage[normalem]{ulem}
\usepackage{wasysym}
\usepackage{dirtree}


\usepackage{semcolor,slidesec}
\input{seminar.bug}
\input{seminar.bg2}
% \input{seminar.bg3} % TODO: why is this missing on OSX?

\definecolor{fillcolor}{rgb}{0.9,0.95,1.0}
\definecolor{linecolor}{rgb}{0.8,0.85,0.9}
\slideframe[\psset{fillcolor=fillcolor,linecolor=linecolor}]{scshadow}

\newcommand{\hc}{Blue}
\newcommand{\h}[1]{\slideheading{\textcolor{\hc}{#1}}}
\newcommand{\tq}[1]{\textcolor{Green}{\textbf{#1}}}
\newcommand{\tbd}[1]{\textcolor{Blue}{\textit{#1}}}
\newcommand{\TODO}{{\Huge \textcolor{Red}{\textbf{{TO DO}}}}}

\definecolor{commentcolor}{rgb}{0.1,0.1,0.8}
\definecolor{identifiercolor}{rgb}{0.2,0.2,0.2}
\definecolor{keywordcolor}{rgb}{0.1,0.3,0.1}
\definecolor{cexcolor}{rgb}{0.25,0.25,0.4}
\lstset{
  basicstyle=\footnotesize\ttfamily,
  language=Lisp,
  morekeywords={make-instance},
  escapeinside={\%*}{*)},
  commentstyle=\itshape\color{commentcolor},
  identifierstyle=\color{identifiercolor},
  keywordstyle=\color{keywordcolor},
  upquote=true,
  numbers=left,
  numberstyle=\tiny\color{commentcolor},
  numbersep=5pt
}
\newcommand{\cex}[1]{\textcolor{cexcolor}{\textit{#1}}}

\newcommand{\shell}[1]{\texttt{\textbf{{\textcolor{Blue} \$}} #1}}

\newcommand{\fullSlideImage}[1]{
  \begin{center}
    \includegraphics[width=4in,height=2.5in,keepaspectratio=true]{#1}
  \end{center}
}

\title{\psshadowbox{ClojureScript Introduction}}
\author{Christopher Mark Gore\\
  \texttt{cgore.com}}
\date{Tuesday, May 26, {\smaller AD} 2015} % textsc doesn't seem to work for Baskerville.

\begin{document}

\raggedslides[0mm]


\begin{slide}
  \color{\hc}

  \begin{center}
    \includegraphics[height=1.25in]{STLClojure.eps}
  \end{center}

  \maketitle

  \color{Black}
\end{slide}


\begin{slide}
  \h{Why ClojureScript?}

  Have you ever seen JavaScript?

  \fullSlideImage{200-percent-mad.eps}
\end{slide}


\begin{slide}
  \h{Why ClojureScript?}

  Have you ever seen Clojure?

  \fullSlideImage{200-percent-glad.eps}
\end{slide}


\begin{slide}
  \h{How I'm going to do stuff.}

  \begin{itemize}
  \item I'm using Leiningen for the projects:\\
    \texttt{http://leiningen.org/}

  \item I'm using \texttt{cljs-kickoff} to template the project:\\
    \texttt{https://github.com/konrad-garus/cljs-kickoff}

  \item That uses \texttt{lein-cljsbuild}:\\
    \texttt{https://github.com/emezeske/lein-cljsbuild}

  \item And also \texttt{lein-ring}:\\
    \texttt{https://github.com/weavejester/lein-ring}
  \end{itemize}
\end{slide}


\begin{slide}
  \h{ClojureScript History}

  \begin{description}
    \item[1958] LISP
    \item[1969] ARPANET
    \item[1984] Common Lisp
    \item[1990] WWW
    \item[1994] Netscape Navigator
    \item[1995] JavaScript
    \item[2007] Clojure
    \item[2012?] ClojureScript
  \end{description}
\end{slide}


\begin{slide}
  \h{\texttt{cljs-kickoff}}

  There is some real work to standing up the file structure for any Clojure
  project, and ClojureScript is no exception.  That's where
  \texttt{cljs-kickoff}\footnote{\texttt{https://github.com/konrad-garus/cljs-kickoff}}
  comes in: it sets up a minimal Leiningen template for ClojureScript with
  \texttt{lein-cljsbuild}.

  \shell{lein new cljs-kickoff hello-world}
\end{slide}


\begin{slide}
  \h{\texttt{cljs-kickoff}}

  \dirtree{%
    .1 hello-world. 
       .2 {project.clj}. 
       .2 resources. 
          .3 public. 
             .4 css. 
                .5 {page.css}. 
             .4 {help.html}. 
       .2 src. 
          .3 clj. 
             .4 hello\_world. 
                .5 {server.clj}. 
          .3 cljs. 
             .4 hello\_world. 
                .5 {client.cljs}. 
  }
\end{slide}


\begin{slide}
  \h{\texttt{lein-cljsbuild}}

  Your beautiful ClojureScript code needs to be \textit{``compiled''} (air
  quotes) into ugly JavaScript to actually work, and you can use
  \texttt{lein-cljsbuild}\footnote{\texttt{https://github.com/emezeske/lein-cljsbuild}}
  does that for you automatically whenever you change a relevant file.
  
  \textit{On a dedicated shell session:}

  \shell{lein cljsbuild auto}
\end{slide}


\begin{slide}
  \h{\texttt{lein-ring}}

  You will want a simple web server to put up your ClojureScript, and you
  probably want it in Clojure.
  Ring\footnote{\texttt{https://github.com/ring-clojure/ring}}
  is a popular one, loosely similar in
  approach to Ruby's Rack, and
  \texttt{lein-ring}\footnote{\texttt{https://github.com/weavejester/lein-ring}}
  provides a lot of nice Leiningen shortcuts for Ring.

  \textit{On a dedicated shell session:}

  \shell{lein ring server}
\end{slide}


\begin{slide}
  \h{Hello, World!}

  \fullSlideImage{hello-world-1.eps}
\end{slide}


\begin{slide}
  \h{Hello, World!}

  \fullSlideImage{hello-world-2.eps}
\end{slide}


\begin{slide}
  \h{Hello, World!}

  \fullSlideImage{hello-world-3.eps}
\end{slide}


\begin{slide}
  \h{\texttt{project.clj}: Dependencies}

\begin{lstlisting}
(defproject hello-world "0.1.0-SNAPSHOT"
  ;; ...
  :dependencies [[org.clojure/clojure "1.5.1"]
                 [org.clojure/clojurescript "0.0-2156"]
                 [ring "1.2.1"]]
  ;; ...
  )
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{\texttt{project.clj}: Plugins}

\begin{lstlisting}
(defproject hello-world "0.1.0-SNAPSHOT"
  ;; ...
  :plugins [[lein-cljsbuild "1.0.2"]
            [lein-ring "0.8.10"]]
  ;; ...
  )
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{\texttt{project.clj}: ClojureScript Build}

\smaller
\begin{lstlisting}
(defproject hello-world "0.1.0-SNAPSHOT"
  ;; ...
  :hooks [leiningen.cljsbuild]
  :source-paths ["src/clj"]
  :cljsbuild { 
    :builds {
      :main {
        :source-paths ["src/cljs"]
        :compiler {:output-to "resources/public/js/cljs.js"
                   :optimizations :simple
                   :pretty-print true}
        :jar true}}}
  ;; ...
  )
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{\texttt{project.clj}: Ring Server}

\begin{lstlisting}
(defproject hello-world "0.1.0-SNAPSHOT"
  ;; ...
  :main hello-world.server
  :ring {:handler hello-world.server/app})
\end{lstlisting}
\end{slide}


\begin{slide}
  \begin{center}
    \textcolor{\hc}{\textbf{\emph{\Huge{Questions?}}}}
  \end{center}
\end{slide}


\end{document}
